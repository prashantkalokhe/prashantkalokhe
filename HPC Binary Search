

 





#include<iostream>

#include<stdlib.h>

#include<omp.h>

#include<time.h>

using namespace std;

 

int binary(int *, int, int, int);

 

int binary(int *a, int low, int high, int key)

{

 

    int mid;

    mid=(low+high)/2;

    int low1,low2,high1,high2,mid1,mid2,found=0,loc=-1;

 

    #pragma omp parallel sections

    {

        #pragma omp section

            {

            low1=low;

            high1=mid;

 

            while(low1<=high1)

            {

 

                if(!(key>=a[low1] && key<=a[high1]))

                {

                    low1=low1+high1;

                    continue;

                }

 

 

                mid1=(low1+high1)/2;

 

                if(key==a[mid1])

                {

                    found=1;

                    loc=mid1;

                    low1=high1+1;

                }

 

                else if(key>a[mid1])

                {

 

                    low1=mid1+1;

                }

 

                else if(key<a[mid1])

                    high1=mid1-1;

 

            }

        }

 

 

 

            #pragma omp section

            {

                  low2=mid+1;

            high2=high;

            while(low2<=high2)

            {

 

                if(!(key>=a[low2] && key<=a[high2]))

                {

                    low2=low2+high2;

                    continue;

                }

 

 

                mid2=(low2+high2)/2;

 

                if(key==a[mid2])

                {

 

                    found=1;

                    loc=mid2;

                    low2=high2+1;

                }

                else if(key>a[mid2])

                {

 

                low2=mid2+1;

                }

                else if(key<a[mid2])

                high2=mid2-1;

 

            }

            }

    }

 

    return loc;

}

 

 

int main()

{

 

 

    int *a,i,n,key,loc=-1;

    clock_t c1,c2;

    float t1;

    c1=clock();

    cout<<"\n enter total no of elements=>";

    cin>>n;

    a=new int[n];

 

    cout<<"\n enter sorted elements =>";

    for(i=0;i<n;i++)

    {

      cin>>a[i];

        }

 

    cout<<"\n enter key to find=>";

    cin>>key;

 

    loc=binary(a,0,n-1,key);

 

    if(loc==-1)

        cout<<"\n Key not found.";

    else

        cout<<"\n Key found at position=>"<<loc+1;

    c2=clock();

            /* TIME MEASURE + OUTPUT */

                c2=clock();  // time measure:

                t1 = (float)(c2-c1)/CLOCKS_PER_SEC; // in seconds; - time elapsed for job row-wise

                cout<<"Execution time(in seconds) \n"<<t1;

    return 0;

}

 

Output :- 

enter total no of elements=> 10

enter sorted elements => 2 5 8 12 16 23 38 56 72 91

enter key to find=> 16

Key found at position=> 5

Execution time(in seconds) 0.000137

 

